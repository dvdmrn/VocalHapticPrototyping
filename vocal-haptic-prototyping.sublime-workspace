{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"color",
				"color='w\tabc"
			],
			[
				"show",
				"showGraphInterp\tabc"
			],
			[
				"get",
				"getData\tfunction"
			],
			[
				"interpo",
				"interpolated_pitch\tabc"
			],
			[
				"pitch_",
				"pitch_interp\tabc"
			],
			[
				"inter",
				"interpolated_pitch\tabc"
			],
			[
				"interp",
				"interp1d\tclass"
			],
			[
				"pru",
				"pruned_arr\tstatement"
			],
			[
				"pit",
				"pitch_values\tabc"
			],
			[
				"arr",
				"array\tabc"
			],
			[
				"arg",
				"argwhere\tfunction"
			],
			[
				"n_",
				"n_frames\tmodule"
			],
			[
				"v",
				"pitch_values"
			],
			[
				"pitch",
				"pitch_values\tabc"
			],
			[
				"sam",
				"sampling_frequency\tabc"
			],
			[
				"n",
				"n_frames\tmodule"
			],
			[
				"sele",
				"selected_array"
			],
			[
				"sel",
				"selected_array"
			],
			[
				"csv",
				"openCSVdict〔function〕"
			],
			[
				"sq",
				"sqr_vec〔variable〕"
			],
			[
				"frame",
				"frame1\tabc"
			],
			[
				"write",
				"writelines〔function〕"
			],
			[
				"protot",
				"prototype\tabc"
			],
			[
				"back",
				"background-color\tproperty"
			],
			[
				"prototy",
				"prototypes\tabc"
			],
			[
				"br",
				"briefing\tabc"
			],
			[
				"list",
				"list-style\tproperty"
			],
			[
				"class",
				"class=〔attribute〕"
			],
			[
				"file",
				"file_extension\tabc"
			],
			[
				"max",
				"maxRequests\tabc"
			],
			[
				"cu",
				"currentRequest\tabc"
			],
			[
				"time",
				"time_to_wait\tabc"
			],
			[
				"image",
				"image_file\tabc"
			],
			[
				"inline",
				"inline-block\tdisplay"
			],
			[
				"created",
				"createdDates\tabc"
			],
			[
				"create",
				"createdDates\tabc"
			],
			[
				"date",
				"datetime\tabc"
			],
			[
				"last",
				"lastDate\tabc"
			],
			[
				"allU",
				"allUsers\tabc"
			],
			[
				"allUs",
				"allUsersPath\tabc"
			],
			[
				"act",
				"activeUsersPath\tabc"
			],
			[
				"first",
				"firstLast\tabc"
			],
			[
				"fir",
				"firstLast\tabc"
			],
			[
				"addM",
				"addMultipleSubjects\tabc"
			],
			[
				"use",
				"username\tabc"
			],
			[
				"add",
				"addSubj\tabc"
			],
			[
				"find",
				"find_element_by_id\tabc"
			],
			[
				"login",
				"loginBtn\tabc"
			],
			[
				"logi",
				"loginBtn\tabc"
			],
			[
				"userN",
				"userName〔variable〕"
			],
			[
				"user",
				"userName\tabc"
			],
			[
				"shifte",
				"shiftedClsn\tabc"
			],
			[
				"raw",
				"raw_scores\tabc"
			],
			[
				"clsn",
				"clsn_raw\tabc"
			],
			[
				"ave_",
				"ave_clsn\tabc"
			],
			[
				"sample",
				"sampleSizes\tabc"
			],
			[
				"pop",
				"populateScores\tabc"
			],
			[
				"fdb",
				"fdbkReader\tabc"
			],
			[
				"compre",
				"comprehensive_user_data.csv\tabc"
			],
			[
				"active",
				"active_users.csv\tabc"
			],
			[
				"userX",
				"userXteamReader\tabc"
			],
			[
				"userXteam",
				"userXteam_csv\tabc"
			],
			[
				"complete_",
				"complete_csv_of_games\tabc"
			],
			[
				"scn",
				"scenarioID\tabc"
			],
			[
				"is",
				"isfile〔function〕"
			],
			[
				"sett",
				"settings_file\tabc"
			],
			[
				"rea",
				"read\t(main.py)"
			],
			[
				"_",
				"_LOGIN_URL\tabc"
			],
			[
				"scra",
				"scraped-teams\t(scrape-teams.py)"
			],
			[
				"scrape",
				"scraped-profiles\t(scrape-profiles.py)"
			],
			[
				"envi",
				"environ\t(scrape-teams.py)"
			],
			[
				"game",
				"game_reader\tabc"
			],
			[
				"team",
				"team_reader\tabc"
			],
			[
				"team_",
				"team_reader"
			],
			[
				"hea",
				"_HEADERS"
			],
			[
				"optin",
				"optins"
			],
			[
				"so",
				"soup"
			],
			[
				"opt",
				"optinNames"
			],
			[
				"op",
				"optinNames"
			],
			[
				"soup",
				"soupme"
			],
			[
				"offset",
				"offset_rates"
			],
			[
				"open",
				"openCSV"
			],
			[
				"offse",
				"offsetAcc"
			],
			[
				"offs",
				"offsetAcc"
			],
			[
				"grou",
				"groupAccByPID"
			],
			[
				"of",
				"offset"
			],
			[
				"ave",
				"aveForCondAndOffset"
			],
			[
				"fiel",
				"fieldNames"
			],
			[
				"corre",
				"correctResponses"
			],
			[
				"cont",
				"contrast"
			],
			[
				"aveForcon",
				"aveForCondAndContrast"
			],
			[
				"pari",
				"participantData"
			],
			[
				"playlist",
				"playListAmp"
			],
			[
				"row",
				"rowToWrite"
			],
			[
				"cor",
				"correctResponses"
			],
			[
				"di",
				"differenceRatio"
			],
			[
				"dif",
				"differenceRatio"
			],
			[
				"thre",
				"thresholdDifference"
			],
			[
				"thres",
				"thresholdDifference"
			],
			[
				"diff",
				"differenceRatio"
			],
			[
				"th",
				"thresholdMean"
			],
			[
				"ratio",
				"ratioPass"
			],
			[
				"beyon",
				"beyondMean"
			],
			[
				"min",
				"minPairMap"
			],
			[
				"num",
				"num_of_files"
			],
			[
				"train",
				"trainingTrials"
			],
			[
				"format",
				"formattedToken"
			],
			[
				"minpai",
				"minPairVibMap"
			],
			[
				"off",
				"offset"
			],
			[
				"sinewv",
				"sinewaveDataArray"
			],
			[
				"ctr",
				"ctrlPlayList"
			],
			[
				"minpa",
				"minpairmap"
			],
			[
				"minp",
				"minpairmap"
			],
			[
				"master",
				"master_output"
			],
			[
				"lowi",
				"lowfitest"
			],
			[
				"amp",
				"ampttest"
			],
			[
				"ctrl",
				"ctrlttest"
			],
			[
				"condt",
				"conditionalProbabilities"
			],
			[
				"cond",
				"conditionalProbabilities"
			],
			[
				"condition",
				"getConditionalProbability"
			],
			[
				"accu",
				"accuracy"
			],
			[
				"condi",
				"conditionSets"
			],
			[
				"ac",
				"accuracyScores"
			],
			[
				"read",
				"readCSV"
			],
			[
				"local",
				"localVar"
			],
			[
				"my",
				"myVar2"
			],
			[
				"fac",
				"factor3"
			],
			[
				"reader",
				"readercpy1"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 186.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"package control",
				"Package Control: Remove Package"
			],
			[
				"anaconda",
				"Anaconda: Set Python interpreter"
			],
			[
				"disab",
				"Anaconda: Disable linting on this file"
			],
			[
				"anaconda setti",
				"Anaconda: Set Python interpreter"
			],
			[
				"th",
				"UI: Select Theme"
			],
			[
				"UI",
				"UI: Select Color Scheme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"jav",
				"Format: Javascript"
			],
			[
				"json",
				"JSON Reindent: reindent file or selection"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"j",
				"Format: Javascript"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"build sys",
				"Build: New Build System"
			],
			[
				"pylint",
				"SublimeREPL: Python - Sublime Text Console"
			],
			[
				"package settings",
				"Preferences: Package Control Settings – User"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"color sche",
				"UI: Select Color Scheme"
			],
			[
				"package control insta",
				"Package Control: Install Package"
			],
			[
				"Package Control",
				"Package Control: List Packages"
			],
			[
				"Color Sh",
				"UI: Select Color Scheme"
			],
			[
				"package ",
				"Package Control: Install Package"
			],
			[
				"intell",
				"Install Package Control"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			]
		],
		"width": 994.0
	},
	"console":
	{
		"height": 295.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/dvdmrn/Documents/srl/vocal-haptic-prototyping"
	],
	"file_history":
	[
		"/home/dvdmrn/Documents/srl/vocal-haptic-prototyping/main.py",
		"/home/dvdmrn/Documents/srl/vocal-haptic-prototyping/GenerateSine.py",
		"/home/dvdmrn/Documents/srl/vocal-haptic-prototyping/ProcessSpeech.py",
		"/home/dvdmrn/Documents/srl/vocal-haptic-prototyping/vocal-haptic-prototyping.sublime-project",
		"/home/dvdmrn/Documents/srl/vocal-haptic-prototyping/test.py",
		"/home/dvdmrn/Documents/srl/vocal-haptic-prototyping/nptest.py",
		"/home/dvdmrn/Documents/srl/vocal-haptic-prototyping/crepemethod.py",
		"/home/dvdmrn/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
		"/home/dvdmrn/Documents/srl/vocal-haptic-prototyping/parselmouth-tst.py",
		"/home/dvdmrn/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/dvdmrn/.config/sublime-text-3/Packages/Anaconda/README.md",
		"/home/dvdmrn/.config/sublime-text-3/Cache/Python/Regular Expressions (Python).sublime-syntax.cache",
		"/home/dvdmrn/Documents/srl/vocal-haptic-prototyping/proj-settings.sublime-settings",
		"/home/dvdmrn/Documents/srl/vocal-haptic-prototyping/parselmouth.py",
		"/home/dvdmrn/Documents/deskterm/README.md",
		"/home/dvdmrn/Desktop/danksy/style.css",
		"/home/dvdmrn/Desktop/danksy/index.html",
		"/home/dvdmrn/Desktop/test.py",
		"/home/dvdmrn/Documents/ame-scraping/settings.json",
		"/home/dvdmrn/Documents/srl/game-flow/test_pad.py",
		"/home/dvdmrn/Documents/srl/game-flow/Farneback_staticVideo.py",
		"/home/dvdmrn/Documents/ame-scraping/main.py",
		"/home/dvdmrn/Documents/srl/game-flow/MarioKart_Crop_settings.json",
		"/home/dvdmrn/Documents/srl/game-flow/MarioKart_Crop.mkv_settings.json",
		"/home/dvdmrn/Documents/srl/game_flow/Farneback_staticVideo.py",
		"/home/dvdmrn/Documents/srl/game_flow/test_pad.py",
		"/home/dvdmrn/Documents/srl/game_flow/output.txt",
		"/home/dvdmrn/Documents/ame-scraping/viz/convertToNarrow.py",
		"/home/dvdmrn/Documents/ame-scraping/helpers.py",
		"/home/dvdmrn/Documents/ame-scraping/ScrapeTeams.py",
		"/home/dvdmrn/Documents/ame-scraping/PlaySessions/GetGames.py",
		"/home/dvdmrn/Documents/ame-scraping/PlaySessions/settings.json",
		"/home/dvdmrn/Documents/ame-scraping/viz/BreakFeedback.py",
		"/home/dvdmrn/Documents/ame-scraping/ParseTeams.py",
		"/home/dvdmrn/Documents/ame-scraping/PlaySessions/PlaySessions.py",
		"/home/dvdmrn/Documents/ame-scraping/PlaySessions/README.md",
		"/home/dvdmrn/Documents/srl/game_flow/video.py",
		"/home/dvdmrn/Documents/srl/game_flow/common.py",
		"/home/dvdmrn/Documents/srl/game_flow/tst_scene_render.py",
		"/home/dvdmrn/Documents/srl/game_flow/ofa_test.py",
		"/home/dvdmrn/Documents/srl/game_flow/ofa_PyrLK.py",
		"/home/dvdmrn/Documents/srl/game_flow/ofa_dense.py",
		"/home/dvdmrn/Documents/srl/game_flow/test_pad",
		"/home/dvdmrn/Documents/srl/game_flow/ofa_dense_testAve.py",
		"/home/dvdmrn/Documents/hapticspeech-training/playback.py",
		"/home/dvdmrn/Documents/hapticspeech-training/test.py",
		"/home/dvdmrn/Documents/srl/game_flow/pyoptflow/HornSchunck.py",
		"/home/dvdmrn/Documents/srl/game_flow/pyoptflow/pyoptflow/hornschunck.py",
		"/home/dvdmrn/Documents/srl/game_flow/pyoptflow/ofa_dense.py",
		"/home/dvdmrn/Documents/ECSE-542/compproto/index.html",
		"/home/dvdmrn/Documents/ECSE-542/style.css",
		"/home/dvdmrn/Documents/ame-scraping/CreateUserSheets.py",
		"/home/dvdmrn/Documents/ame-scraping/PlayerTeamMatching.py",
		"/home/dvdmrn/Documents/ECSE-542/lowfi/index.html",
		"/home/dvdmrn/Documents/srl/pullpubs.py",
		"/home/dvdmrn/Documents/ECSE-542/computer-prototype-test/serialport.py",
		"/home/dvdmrn/Documents/srl/pubs_data.txt",
		"/home/dvdmrn/Documents/ame-scraping/ScrapeProfiles.py",
		"/home/dvdmrn/Documents/hci/proposal/index.html",
		"/home/dvdmrn/Documents/cim/google-spreadsheet-javascript-master/index.html",
		"/home/dvdmrn/Documents/testland/jordan.py",
		"/home/dvdmrn/Documents/cim/google-spreadsheet-javascript-master/sample.html",
		"/home/dvdmrn/Documents/cim/google-spreadsheet-javascript-master/google-spreadsheet.js",
		"/home/dvdmrn/.cache/.fr-hp2sWi/hci/index.html",
		"/home/dvdmrn/.cache/.fr-OM3hX7/hci/index.html",
		"/home/dvdmrn/Documents/P2-interview-notes.txt",
		"/home/dvdmrn/Documents/ame-scraping/propel-push/PushToPropel.py",
		"/home/dvdmrn/Documents/ame-scraping/SignupFreq/SignupFreq.py",
		"/home/dvdmrn/Documents/ame-scraping/SignupDensity/SignupDensity.py",
		"/home/dvdmrn/Documents/ame-scraping/propel-push/login.json",
		"/home/dvdmrn/Documents/ame-scraping/mailing/MakeUnplayedMailList.py",
		"/home/dvdmrn/Documents/ame-scraping/ProcessGames.py",
		"/home/dvdmrn/Documents/ame-scraping/ParseProfiles.py",
		"/home/dvdmrn/Documents/ame-scraping/hell/yetanothertest.py",
		"/home/dvdmrn/Documents/ame-scraping/hell/base.py",
		"/home/dvdmrn/Documents/ame-scraping/hell/base1.py",
		"/home/dvdmrn/Documents/ame-scraping/hell/multibase.py",
		"/home/dvdmrn/Documents/ame-scraping/res/game-id-mappings.json",
		"/home/dvdmrn/Documents/ame-scraping/README.md",
		"/home/dvdmrn/Documents/ame-scraping/viz/scnr_viz.R",
		"/home/dvdmrn/Documents/ame-scraping/CreateComprehensiveUserSheet.py",
		"/home/dvdmrn/Documents/ame-scraping/ActiveUsersOnly.py",
		"/home/dvdmrn/Documents/ame-scraping/game-id-mappings.json",
		"/home/dvdmrn/Documents/ame-scraping/jsonread.py",
		"/home/dvdmrn/.config/sublime-text-3/Packages/User/Python3.sublime-build",
		"/home/dvdmrn/Documents/ame-scraping/scrape-profiles.py",
		"/home/dvdmrn/Documents/ame-scraping/process-games.py",
		"/home/dvdmrn/Documents/ame-scraping/scrape-teams.py",
		"/home/dvdmrn/Documents/ame-scraping/login.txt",
		"/home/dvdmrn/Documents/ame-scraping/Secrets/set_env.sh",
		"/home/dvdmrn/.config/sublime-text-3/Packages/User/SublimeREPL.sublime-settings",
		"/home/dvdmrn/.config/sublime-text-3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/home/dvdmrn/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/dvdmrn/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/dvdmrn/Documents/ame-scraping/scrape-admin.py",
		"/home/dvdmrn/Documents/ame-scraping/.gitignore",
		"/home/dvdmrn/Documents/ame-scraping/parse-sites.py",
		"/home/dvdmrn/Documents/ame-scraping/scraped-profiles/342.html",
		"/home/dvdmrn/Documents/ame-scraping/scraped-teams/70.html",
		"/home/dvdmrn/Documents/ame-scraping/parse-teams.py",
		"/home/dvdmrn/Documents/ame-scraping/player-team-matching.py",
		"/home/dvdmrn/Documents/ame-scraping/scraped-profiles/335.html",
		"/home/dvdmrn/Documents/ame-scraping/jsScrape/whoisshe.html",
		"/home/dvdmrn/Documents/ame-scraping/jsScrape/qttest3.py",
		"/home/dvdmrn/Documents/ame-scraping/scrapy/gimmereact/gimmereact/spiders/gimmereact.py",
		"/home/dvdmrn/Documents/ame-scraping/yetanothertest (copy).py",
		"/home/dvdmrn/Documents/ame-scraping/yetanothertest.py",
		"/home/dvdmrn/Documents/ame-scraping/scrapy/scrapyscrape.py",
		"/home/dvdmrn/Documents/ame-scraping/jsScrape/qtScrape.py",
		"/home/dvdmrn/Documents/ame-scraping/webscrape.py",
		"/home/dvdmrn/Documents/ame-scraping/jsScrape/qttest.py",
		"/home/dvdmrn/Documents/ame-scraping/jsScrape/jsScrape.py",
		"/home/dvdmrn/Documents/haptic-speech-analysis/temporal/transData.py",
		"/home/dvdmrn/Documents/ame-scraping/jsScrape/qttest2.py",
		"/home/dvdmrn/Documents/hapspeech backup data/stats that worked for unvoiced stops",
		"/home/dvdmrn/Documents/haptic-speech-analysis/training/training_preprocess.py",
		"/home/dvdmrn/Documents/hapspeech backup data/results",
		"/home/dvdmrn/Documents/hapticspeech-training/main.py",
		"/home/dvdmrn/Documents/AME/tests/snstests.py",
		"/home/dvdmrn/Documents/webkit-server/setup.py",
		"/home/dvdmrn/Documents/haptic-speech-analysis/old-study/1prepdata.py",
		"/home/dvdmrn/Documents/misc/histogram.py",
		"/home/dvdmrn/Documents/misc/parsejson-personlen.py",
		"/home/dvdmrn/Documents/haptic-speech-analysis/transData.py",
		"/home/dvdmrn/Documents/haptic-speech-analysis/temporal/makemasterCSV.py",
		"/home/dvdmrn/Documents/hapticspeech-temporal/main.py",
		"/home/dvdmrn/Documents/misc/vestastushisahatciu_84df44cf4f/message.json",
		"/home/dvdmrn/Documents/misc/parsejson.json"
	],
	"find":
	{
		"height": 44.0
	},
	"find_in_files":
	{
		"height": 114.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"interpolate",
			"\"]\n",
			"chunk",
			"make_sine",
			"ProcessSpeech",
			"vst",
			"xrange",
			"pyaudio",
			"k",
			"xrange",
			"pyaudio",
			"pyadui",
			"draw_pitch",
			"draw pitch",
			"draw_pitch_interpolated",
			"interpolated_pitch",
			"time\\.sleep",
			"combo",
			"tupled",
			"x_grid",
			"draw_spe",
			"nan",
			"time\\.sle",
			"to_pitch",
			"pitch_values",
			"pitchFrame",
			"t",
			"to_pitch",
			"_interpreter",
			"signatures",
			"linting",
			"_interpreter",
			"interpreter",
			"true",
			"linting",
			"interpreter",
			"bin",
			"\\/usr",
			"/usr",
			"python_inter",
			"python3",
			"path"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 44.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 297.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Python3.sublime-build",
	"project": "vocal-haptic-prototyping.sublime-project",
	"replace":
	{
		"height": 58.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Sine",
				"GenerateSine.py"
			],
			[
				"test",
				"test_pad.py"
			],
			[
				"farne",
				"Farneback_staticVideo.py"
			],
			[
				"ou",
				"output.txt"
			],
			[
				"out",
				"output.txt"
			],
			[
				"helpers",
				"helpers.py"
			],
			[
				"scrapetea",
				"ScrapeTeams.py"
			],
			[
				"helper",
				"helpers.py"
			],
			[
				"video",
				"video.py"
			],
			[
				"dense",
				"ofa_dense.py"
			],
			[
				"ofa_dense",
				"ofa_dense.py"
			],
			[
				"css",
				"style.css"
			],
			[
				"sty",
				"style.css"
			],
			[
				"main",
				"main.py"
			],
			[
				"signu",
				"SignupFreq/SignupFreq.py"
			],
			[
				"he",
				"helpers.py"
			],
			[
				"help",
				"helpers.py"
			],
			[
				"sett",
				"settings.json"
			],
			[
				"match",
				"PlayerTeamMatching.py"
			],
			[
				"matc",
				"PlayerTeamMatching.py"
			],
			[
				"parse",
				"ParseTeams.py"
			],
			[
				"parsepr",
				"ParseProfiles.py"
			],
			[
				"scrapeT",
				"ScrapeTeams.py"
			],
			[
				"hel",
				"helpers.py"
			],
			[
				"scrape",
				"ScrapeProfiles.py"
			],
			[
				"player",
				"PlayerTeamMatching.py"
			],
			[
				"usershee",
				"CreateUserSheets.py"
			],
			[
				"json",
				"settings.json"
			],
			[
				"yeta",
				"hell/yetanothertest.py"
			],
			[
				"game-id",
				"res/game-id-mappings.json"
			],
			[
				"Proce",
				"ProcessGames.py"
			],
			[
				"settin",
				"settings.json"
			],
			[
				"settn",
				"settings.json"
			],
			[
				"teams",
				"ParseTeams.py"
			],
			[
				"setti",
				"settings.json"
			],
			[
				"matchin",
				"PlayerTeamMatching.py"
			],
			[
				"set",
				"ScrapeTeams.py"
			],
			[
				"read",
				"README.md"
			],
			[
				"scrapepro",
				"ScrapeProfiles.py"
			],
			[
				"scrapeTea",
				"ScrapeTeams.py"
			],
			[
				"u",
				"utilities.py"
			],
			[
				"pla",
				"playback.py"
			],
			[
				"play",
				"playback.py"
			],
			[
				"voi",
				"voicingfilter.py"
			],
			[
				"voici",
				"voicingfilter.py"
			],
			[
				"playb",
				"playback.py"
			],
			[
				"voic",
				"voicingfilter.py"
			],
			[
				"uti",
				"utilities.py"
			],
			[
				"utili",
				"utilities.py"
			],
			[
				"voicin",
				"voicingfilter.py"
			],
			[
				"textdi",
				"textdisplay.py"
			],
			[
				"para",
				"parameters.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 255.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
